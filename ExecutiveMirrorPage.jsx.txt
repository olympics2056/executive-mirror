import React from "react";

import { motion } from "framer-motion";

import { Brain, Target, Compass, LineChart, HeartHandshake, ShieldCheck, AlertTriangle, ArrowRight, Printer } from "lucide-react";

// ---- Data (feel free to tweak text inline) ----

const coreIdentity = "A visionary technical leader who bridges deep expertise in oils & fats with strategic foresight, business acumen, and AI-driven innovation.";

const psychological = [

  { title: "MBTI", detail: "ENTJ / INTJ – The Visionary Executive. Natural strategist, systems thinker, decisive, forward-looking." },

  { title: "Big Five", detail: "Openness: Very High • Conscientiousness: Very High • Extraversion: Medium – balanced; enjoys engaging with people when leading, but also values solo focus for deep work • Agreeableness: Medium-High • Neuroticism: Low-Medium" },

  { title: "Enneagram", detail: "Type 3 (Achiever) with Type 5 (Investigator) wing – ambitious, adaptable, analytical." },

];

const strengths = [

  { icon: <Brain className="w-5 h-5" />, title: "Technical Mastery", desc: "Oils & fats chemistry, processing, and regulations." },

  { icon: <Compass className="w-5 h-5" />, title: "Strategic Thinking", desc: "Markets, supply chains, and financial management." },

  { icon: <HeartHandshake className="w-5 h-5" />, title: "Leadership", desc: "R&D direction, mentoring, cross-functional influence." },

  { icon: <LineChart className="w-5 h-5" />, title: "Innovation", desc: "AI tools, dashboards, and data systems for decisions." },

  { icon: <ShieldCheck className="w-5 h-5" />, title: "Resilience", desc: "Turns setbacks into learning and forward motion." },

];

const mirrorRows = [

  {

    strength: "Strategic Thinker (ENTJ/INTJ)",

    weakness: "Blind Spot in Emotions",

    growth: "Do direct emotional check-ins; don’t assume silence = alignment.",

  },

  {

    strength: "High Openness & Conscientiousness",

    weakness: "Delayed Boundaries",

    growth: "Define non-negotiables early; state decisions clearly and calmly.",

  },

  {

    strength: "Technical Mastery (Oils & Fats)",

    weakness: "Kindness Misread",

    growth: "Pair love/help with accountability and explicit expectations.",

  },

  {

    strength: "Resilient, Innovative, Visionary",

    weakness: "Over-Cooperation",

    growth: "Self-advocate visibly; say yes with conditions and credit.",

  },

];

const weaknesses = [

  {

    title: "Blind Spot in Emotional Reading",

    example: "Didn’t detect partner’s inner feelings/affairs until late.",

    cause: "Equates deeds of care with emotional connection.",

    strategy: "Schedule honest check-ins; watch for tone/behavior shifts early.",

  },

  {

    title: "Delayed Boundary-Setting",

    example: "Respect erodes into directing your career moves.",

    cause: "Harmony-seeking, conflict avoidance.",

    strategy: "Name your non-negotiables; use language like ‘This decision is mine.’",

  },

  {

    title: "Kindness Without Edges",

    example: "Teen takes advantage of generosity; partner assumes flexibility.",

    cause: "Belief that affection alone sustains mutual respect.",

    strategy: "Balance warmth with rules and consequences; reciprocity check-ins.",

  },

  {

    title: "Over-Cooperation at Work",

    example: "Reliability exploited; recognition lags.",

    cause: "Team-first mindset + aversion to self-promotion.",

    strategy: "Make contributions visible; ask for credit/scope when saying yes.",

  },

];

const mantra = "My kindness is strongest when it has edges — clear boundaries turn care into respect.";

// ---- Simple SVG Mirror Diagram ----

function MirrorDiagram() {

  return (
<svg viewBox="0 0 1200 520" className="w-full h-auto">
<defs>
<filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
<feDropShadow dx="0" dy="6" stdDeviation="8" floodOpacity="0.12" />
</filter>
</defs>

      {/* Headers */}
<text x="120" y="40" className="fill-slate-700" style={{ fontSize: 18, fontWeight: 700 }}>Strength</text>
<text x="560" y="40" className="fill-slate-700" style={{ fontSize: 18, fontWeight: 700 }}>Growth Strategy</text>
<text x="960" y="40" className="fill-slate-700" style={{ fontSize: 18, fontWeight: 700, textAnchor: 'end' }}>Weakness</text>

      {mirrorRows.map((row, i) => {

        const y = 100 + i * 100;

        return (
<g key={i} filter="url(#shadow)">

            {/* Strength card */}
<rect x="40" y={y - 30} width="360" height="70" rx="14" className="fill-white" />
<rect x="40" y={y - 30} width="360" height="70" rx="14" className="stroke-slate-200" fill="none" />
<text x="60" y={y + 5} className="fill-slate-800" style={{ fontSize: 14 }}>{row.strength}</text>

            {/* Growth card */}
<rect x="420" y={y - 30} width="360" height="70" rx="14" className="fill-white" />
<rect x="420" y={y - 30} width="360" height="70" rx="14" className="stroke-slate-200" fill="none" />
<text x="440" y={y + 5} className="fill-slate-800" style={{ fontSize: 14 }}>{row.growth}</text>

            {/* Weakness card */}
<rect x="800" y={y - 30} width="360" height="70" rx="14" className="fill-white" />
<rect x="800" y={y - 30} width="360" height="70" rx="14" className="stroke-slate-200" fill="none" />
<text x="820" y={y + 5} className="fill-slate-800" style={{ fontSize: 14 }}>{row.weakness}</text>

            {/* Arrows */}
<line x1="400" y1={y + 5} x2="420" y2={y + 5} className="stroke-slate-400" strokeWidth="2" markerEnd="url(#arrow)" />
<line x1="780" y1={y + 5} x2="800" y2={y + 5} className="stroke-slate-400" strokeWidth="2" markerEnd="url(#arrow)" />
</g>

        );

      })}
<defs>
<marker id="arrow" markerWidth="10" markerHeight="10" refX="6" refY="3" orient="auto">
<path d="M0,0 L0,6 L9,3 z" className="fill-slate-400" />
</marker>
</defs>
</svg>

  );

}

// ---- Small UI helpers ----

const Card = ({ children, className = "" }) => (
<div className={`rounded-2xl shadow-sm border border-slate-200 bg-white p-5 ${className}`}>{children}</div>

);

const Section = ({ title, icon, children, className = "" }) => (
<section className={`space-y-4 ${className}`}>
<div className="flex items-center gap-2">

      {icon}
<h2 className="text-xl font-semibold text-slate-800">{title}</h2>
</div>

    {children}
</section>

);

// ---- Page ----

export default function ExecutiveMirrorPage() {

  const handlePrint = () => window.print();

  return (
<div className="min-h-screen bg-slate-50 text-slate-800">
<header className="sticky top-0 z-10 backdrop-blur bg-white/70 border-b border-slate-200">
<div className="max-w-5xl mx-auto px-6 py-4 flex items-center justify-between">
<div className="flex items-center gap-3">
<Target className="w-6 h-6" />
<h1 className="text-2xl font-bold">Executive Identity & Growth Mirror</h1>
</div>
<div className="flex items-center gap-2">
<button onClick={handlePrint} className="inline-flex items-center gap-2 rounded-xl border border-slate-300 px-3 py-2 text-sm hover:bg-slate-100">
<Printer className="w-4 h-4" /> Print / Save PDF
</button>
</div>
</div>
</header>
<main className="max-w-5xl mx-auto px-6 py-8 space-y-8">

        {/* Core Identity */}
<motion.div initial={{ opacity: 0, y: 8 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.4 }}>
<Card>
<div className="flex items-start gap-4">
<Brain className="w-6 h-6 mt-1" />
<div>
<h2 className="text-xl font-semibold mb-1">Core Identity</h2>
<p className="text-slate-700 leading-relaxed">{coreIdentity}</p>
</div>
</div>
</Card>
</motion.div>

        {/* Two-column: Psychological + Career Branding */}
<div className="grid grid-cols-1 md:grid-cols-2 gap-6">
<motion.div initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.45 }}>
<Section title="Psychological Lens" icon={<Brain className="w-5 h-5" />}> 
<Card>
<ul className="space-y-3 list-disc pl-5">

                  {psychological.map((p, i) => (
<li key={i}>
<span className="font-medium">{p.title}:</span> {p.detail}
</li>

                  ))}
</ul>
</Card>
</Section>
</motion.div>
<motion.div initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>
<Section title="Career Branding" icon={<LineChart className="w-5 h-5" />}> 
<div className="grid grid-cols-1 gap-4">

                {strengths.map((s, i) => (
<Card key={i} className="">
<div className="flex items-start gap-3">
<div className="mt-0.5 text-slate-700">{s.icon}</div>
<div>
<div className="font-semibold">{s.title}</div>
<div className="text-sm text-slate-700">{s.desc}</div>
</div>
</div>
</Card>

                ))}
</div>
</Section>
</motion.div>
</div>

        {/* Mirror Diagram */}
<motion.div initial={{ opacity: 0, y: 12 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>
<Section title="Mirror Diagram" icon={<ArrowRight className="w-5 h-5" />}>
<Card>
<MirrorDiagram />
</Card>
</Section>
</motion.div>

        {/* Weakness Profile & Growth Map */}
<motion.div initial={{ opacity: 0, y: 12 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.55 }}>
<Section title="Weakness Profile & Growth Map" icon={<AlertTriangle className="w-5 h-5" />}>
<div className="grid grid-cols-1 md:grid-cols-2 gap-6">

              {weaknesses.map((w, i) => (
<Card key={i}>
<h3 className="text-base font-semibold">{w.title}</h3>
<div className="mt-2 text-sm text-slate-700 space-y-1">
<p><span className="font-medium">Example:</span> {w.example}</p>
<p><span className="font-medium">Cause:</span> {w.cause}</p>
<p><span className="font-medium">Strategy:</span> {w.strategy}</p>
</div>
</Card>

              ))}
</div>
</Section>
</motion.div>

        {/* Mantra */}
<motion.div initial={{ opacity: 0, y: 12 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }}>
<Card>
<div className="flex items-start gap-3">
<ShieldCheck className="w-5 h-5 mt-0.5" />
<div>
<h3 className="text-base font-semibold">Mantra</h3>
<p className="text-slate-700">“{mantra}”</p>
</div>
</div>
</Card>
</motion.div>

        {/* Footer actions */}
<div className="flex flex-wrap items-center gap-3 justify-end print:hidden">
<a

            href="#"

            onClick={handlePrint}

            className="inline-flex items-center gap-2 rounded-xl border border-slate-300 px-3 py-2 text-sm hover:bg-slate-100"
>
<Printer className="w-4 h-4" /> Print / Save as PDF
</a>
</div>
</main>
<style>{`

        @media print {

          header { display: none; }

          main { padding-top: 0; }

          a { text-decoration: none; }

        }

      `}</style>
</div>

  );

}
 
